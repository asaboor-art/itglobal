<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;
use App\Models\BaseModel;
use App\Helpers\Helper;
use Auth;

class ContactForm extends BaseModel
{
    use HasFactory;
    protected $fillable = [
        'first_name','phone','email','message','city','property_id','project'
    ];

    public $class_name = 'App\Models\ContactForm';
    protected $table = 'contact_forms';
    
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope('active_contact_forms', function (Builder $builder) {
            $user = Auth::user();
            if(isset($user) && !$user->hasRole('admin')){
                $builder->where('contact_forms.is_delete', '=', 0);
            }
           
        });
    }

    public function getRecordDataTable($request){
        if($request->has('search') && $request->search !=''){
            $this->setFilters(['first_name','like','%'.$request->search.'%']);     
        }

        $condition = [];
        $result = [];
        $this->setSelectedColumn(['contact_forms.id','contact_forms.first_name as name','project','contact_forms.email','phone','contact_forms.city','message','contact_forms.created_at','properties.name as property']);

        $this->setRenderColumn([
            [
                'name' => 'id',
                'db_name' => 'id',
                'type' => 'integer',
                'html' => false,
            ],
            [
                'name' => 'name',
                'type' => 'string',
                'html' => false,
                
            ],
            [
                'name' => 'email',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'property',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'project',
                'type' => 'string',
                'html' => false,
                
            ],
            [
                'name' => 'phone',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'created_at',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'message',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'city',
                'type' => 'string',
                'html' => false,
            ],
           
            

        ]);
        
        $result = $this->getAllDatatables([],
        $this->getSelectedColumns(),
        [],'',[['properties','contact_forms.property_id','=','properties.id']]);
            
        return $result;
    }
}
