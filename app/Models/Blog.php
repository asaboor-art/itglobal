<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;
use App\Models\BaseModel;

class Blog extends BaseModel
{
    use HasFactory;

    protected $fillable = ['name','slug','description','written_by','published_by','published_at','is_active','is_delete'];
    public $class_name = 'App\Models\Blog';
    protected $table = 'blogs';

    private $rules = [
        'name' => 'required',
        'slug' => 'required',
        'desciption' => 'required',
        'published_at' => 'required',
        'published_by' => 'required',
        'written_by' => 'required',

    ];

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope('active_blogs', function (Builder $builder) {
            $user = Auth::user();
            if(isset($user) && !$user->hasRole('admin')){
                $builder->where('blogs.is_delete', '=', 0);
            }else{
                $builder->where('blogs.is_delete', '=', 0)->where('blogs.is_active','=',1);
            }
           
        });
    }

    public function getRecordDataTable($request){
        if($request->has('search') && $request->search !=''){
            $this->setFilters(['name','like','%'.$request->search.'%']);     
        }

        $condition = [];
        $result = [];
        $this->setSelectedColumn(['blogs.id','blogs.name','blogs.slug','blogs.published_by','blogs.written_by','blogs.published_At']);

        $this->setRenderColumn([
            [
                'name' => 'id',
                'db_name' => 'id',
                'type' => 'integer',
                'html' => false,
            ],
            [
                'name' => 'name',
                'type' => 'string',
                'html' => false,
                'link' => 'property',
                'link_column' => 'slug',
                
            ],
            [
                'name' => 'slug',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'published_at',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'published_by',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'written_by',
                'type' => 'string',
                'html' => false,
            ],
           
            [
                'name' => 'created_at',
                'type' => 'string',
                'html' => false,
            ],
            [
                'name' => 'is_active',
                'type' => 'boolean',
                'html' => false,
                
            ],
            [
                'name' => 'status',
                'type' => 'boolean',
                'html' => true,
                'condition_colum' => 'is_active'
            ],
            

        ]);

        $result = $this->getAllDatatables([],
        $this->getSelectedColumns(),
        [],'',[]);
            
        return $result;
    }

    public function getRule(){
        return $this->rules;
    }
}
